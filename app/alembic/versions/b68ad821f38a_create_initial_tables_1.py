"""Create initial tables 1

Revision ID: b68ad821f38a
Revises: e61e20c7defd
Create Date: 2024-12-19 01:53:57.319454

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'b68ad821f38a'
down_revision: Union[str, None] = 'e61e20c7defd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('UQ__users__F3DBC57203242805', 'users', type_='unique')

    op.add_column('users', sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False))
    op.add_column('users', sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False))
    op.drop_column('users', 'username')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('username', sa.VARCHAR(length=255, collation='SQL_Latin1_General_CP1_CI_AS'), autoincrement=False, nullable=False))
    # Add the unique constraint back on the username column
    op.create_unique_constraint('UQ__users__F3DBC57203242805', 'users', ['username'])
    
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    # ### end Alembic commands ###
